{"version":3,"sources":["src/js/task-3.js"],"names":["makeTransaction","transaction","delay","randomIntegerFromInterval","Promise","resolve","reject","setTimeout","canProcess","Math","random","id","min","max","floor","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":"AAAA;AACA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,WAAW,EAAI;AACrC;AACA,MAAMC,KAAK,GAAGC,yBAAyB,CAAC,GAAD,EAAM,GAAN,CAAvC;AAEA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,IAAAA,UAAU,CAAC,YAAM;AACf,UAAMC,UAAU,GAAGC,IAAI,CAACC,MAAL,KAAgB,GAAnC,CADe,CAEf;;AACA,UAAMC,EAAE,GAAGV,WAAW,CAACU,EAAvB;;AACA,UAAIH,UAAJ,EAAgB;AACdH,QAAAA,OAAO,CAAC;AAAEM,UAAAA,EAAE,EAAFA,EAAF;AAAMT,UAAAA,KAAK,EAALA;AAAN,SAAD,CAAP;AACD;;AACDI,MAAAA,MAAM,CAACK,EAAD,CAAN;AACD,KARS,EAQPT,KARO,CAAV;AASD,GAVM,CAAP;AAWD,CAfD,EAiBA;;;AACA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACS,GAAD,EAAMC,GAAN,EAAc;AAC9C,SAAOJ,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACC,MAAL,MAAiBG,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD,CAFD,EAIA;;;AACA,IAAMG,UAAU,GAAG,SAAbA,UAAa,OAAmB;AAAA,MAAhBJ,EAAgB,QAAhBA,EAAgB;AAAA,MAAZT,KAAY,QAAZA,KAAY;AACpCc,EAAAA,OAAO,CAACC,GAAR,uBAA2BN,EAA3B,2BAA8CT,KAA9C;AACD,CAFD,EAIA;;;AACA,IAAMgB,QAAQ,GAAG,SAAXA,QAAW,CAAAP,EAAE,EAAI;AACrBK,EAAAA,OAAO,CAACG,IAAR,wCAA6CR,EAA7C;AACD,CAFD;;AAIAX,eAAe,CAAC;AAAEW,EAAAA,EAAE,EAAE,EAAN;AAAUS,EAAAA,MAAM,EAAE;AAAlB,CAAD,CAAf,CAAyCC,IAAzC,CAA8CN,UAA9C,EAA0DO,KAA1D,CAAgEJ,QAAhE;AACAlB,eAAe,CAAC;AAAEW,EAAAA,EAAE,EAAE,EAAN;AAAUS,EAAAA,MAAM,EAAE;AAAlB,CAAD,CAAf,CAAyCC,IAAzC,CAA8CN,UAA9C,EAA0DO,KAA1D,CAAgEJ,QAAhE;AACAlB,eAAe,CAAC;AAAEW,EAAAA,EAAE,EAAE,EAAN;AAAUS,EAAAA,MAAM,EAAE;AAAlB,CAAD,CAAf,CAAwCC,IAAxC,CAA6CN,UAA7C,EAAyDO,KAAzD,CAA+DJ,QAA/D;AACAlB,eAAe,CAAC;AAAEW,EAAAA,EAAE,EAAE,EAAN;AAAUS,EAAAA,MAAM,EAAE;AAAlB,CAAD,CAAf,CAAyCC,IAAzC,CAA8CN,UAA9C,EAA0DO,KAA1D,CAAgEJ,QAAhE","file":"task-3.2460dbd4.js","sourceRoot":"..","sourcesContent":["// Promise Задание 3\r\nconst makeTransaction = transaction => {\r\n  // встановлює діапазон інтервалу\r\n  const delay = randomIntegerFromInterval(200, 500);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      const canProcess = Math.random() > 0.3;\r\n      // генерує Успіх чи Провал\r\n      const id = transaction.id;\r\n      if (canProcess) {\r\n        resolve({ id, delay });\r\n      }\r\n      reject(id);\r\n    }, delay);\r\n  });\r\n};\r\n\r\n// Генерує інтервал\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\n// функція коли Успіх\r\nconst logSuccess = ({ id, delay }) => {\r\n  console.log(`Transaction ${id} processed in ${delay}ms`);\r\n};\r\n\r\n// функція коли Провал\r\nconst logError = id => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\r\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\r\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\r\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\r\n"]}